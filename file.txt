Example Ingress Resource:

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: new-jenkins3
  annotations:
    kubernetes.io/ingress.class: "nginx"  # Assuming NGINX Ingress is installed
    cert-manager.io/cluster-issuer: "letsencrypt-prod"  # For SSL certificate
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - jenkins.example.com
      secretName: jenkins-tls-secret  # SSL certificate
  rules:
    - host: jenkins.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkinsnew-3
                port:
                  number: 8080

3. Set Up SSL Certificates

To configure SSL for your Jenkins setup:

    Install Cert-Manager (if not already installed):

kubectl apply -f https://github.com/jetstack/cert-manager/releases/latest/download/cert-manager.yaml

Create a Let's Encrypt ClusterIssuer:

    apiVersion: cert-manager.io/v1
    kind: ClusterIssuer
    metadata:
      name: letsencrypt-prod
    spec:
      acme:
        server: https://acme-v02.api.letsencrypt.org/directory
        email: your-email@example.com
        privateKeySecretRef:
          name: letsencrypt-prod
        solvers:
          - http01:
              ingress:
                class: nginx

    Validate the Certificate:
        After applying the Ingress configuration, Cert-Manager will generate an SSL certificate and store it in the jenkins-tls-secret.

    Update Your DNS Settings:
        Point your domain (e.g., jenkins.example.com) to the external IP of the LoadBalancer service (34.45.55.191).

4. Expose External GCP Compute Jenkins Instance

If you also want to route traffic to the GCP Compute Instance (outside the cluster), create an external service using the ExternalName type:

apiVersion: v1
kind: Service
metadata:
  name: jenkins-gcp-instance
  namespace: new-jenkins3
spec:
  type: ExternalName
  externalName: <external-jenkins-ip>  # Replace with the Jenkins Compute Instance's public IP
  ports:
    - protocol: TCP
      port: 443  # Target HTTPS port
      targetPort: 443

You can then add another path in your Ingress to route traffic to this external Jenkins instance.
5. Full Ingress Example (Cluster + GCP Jenkins Instance)

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: new-jenkins3
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
    - hosts:
        - jenkins.example.com
      secretName: jenkins-tls-secret
  rules:
    - host: jenkins.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jenkinsnew-3
                port:
                  number: 8080
          - path: /external
            pathType: Prefix
            backend:
              service:
                name: jenkins-gcp-instance
                port:
                  number: 443

    / routes traffic to the Kubernetes Jenkins setup.
    /external routes traffic to the external GCP Jenkins instance.

6. Validate the Setup

    Verify the Ingress status:

    kubectl get ingress -n new-jenkins3

    Access the domain:
        Test https://jenkins.example.com and ensure SSL is active.
        For the external instance, test https://jenkins.example.com/external.

