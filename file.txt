# Set the local environment variable for the Run directory
$env:RUN_DIR = "E:\ALDOT-Project\run"

# Define the source and destination paths based on the RUN_DIR environment variable
$batchScripts = Join-Path -Path $env:RUN_DIR -ChildPath "batch-scripts"
$batchScriptsBackup = "."  # Adjust to your server path

# Check if the source directory exists
if (-not (Test-Path -Path $batchScripts)) {
    Write-Output "Source directory '$batchScripts' does not exist."
    return
}

# Ensure the backup directory on the server exists, create it if it does not
if (-not (Test-Path -Path $batchScriptsBackup)) {
    New-Item -ItemType Directory -Path $batchScriptsBackup -Force | Out-Null
}

# Copy contents from BATCH-SCRIPTS to BATCH-SCRIPTS-BACKUP with overwrite
try {
    Copy-Item -Path $batchScripts\* -Destination $batchScriptsBackup -Recurse -Force
    Write-Output "Contents copied successfully from '$batchScripts' to '$batchScriptsBackup'."
}
catch {
    Write-Output "An error occurred during copying: $_"
}

https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))


dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart
